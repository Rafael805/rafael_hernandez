{"version":3,"sources":["assets/MOONGET_Heavy.blob","assets/bold.blob","assets/nature.jpeg","assets/music.jpg","assets/ying.jpg","assets/dog.jpg","assets/pyramids.jpg","assets/dream.jpg","assets/diamond.glb","components/Background.js","components/Stars.js","postprocessing/Pass.js","postprocessing/MaskPass.js","postprocessing/ShaderPass.js","shaders/CopyShader.js","postprocessing/EffectComposer.js","postprocessing/RenderPass.js","shaders/DigitalGlitch.js","postprocessing/GlitchPass.js","components/Effects.js","components/HomeText.js","components/JumboText.js","components/Scene.js","pages/HomePage.js","components/AboutComponents/Store.js","components/AboutComponents/Blocks.js","components/AboutComponents/Text.js","components/AboutComponents/CustomMaterial.js","components/AboutComponents/Plane.js","components/AboutComponents/Paragraph.js","components/AboutComponents/Content.js","components/AboutComponents/Startup.js","components/AboutComponents/BackfaceMaterial.js","components/AboutComponents/RefractionMaterial.js","components/AboutComponents/Diamond.js","pages/AboutPage.js","pages/ContactPage.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Background","color","viewport","useThree","console","log","scale","width","height","visible","attach","args","meshBasicMaterial","depthTest","Stars","position","group","useRef","theta","useFrame","r","Math","sin","THREE","degToRad","s","cos","current","rotation","set","useMemo","Array","fill","map","i","random","geo","mat","coords","ref","p1","p2","p3","key","geometry","material","Pass","this","enabled","needsSwap","clear","renderToScreen","Object","assign","prototype","setSize","render","renderer","writeBuffer","readBuffer","deltaTime","maskActive","error","MaskPass","scene","camera","call","inverse","create","constructor","writeValue","clearValue","context","state","buffers","setMask","depth","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","setRenderTarget","EQUAL","KEEP","ClearMaskPass","ShaderPass","shader","textureID","undefined","ShaderMaterial","uniforms","UniformsUtils","clone","defines","vertexShader","fragmentShader","OrthographicCamera","Scene","quad","Mesh","PlaneBufferGeometry","frustumCulled","add","value","texture","CopyShader","tDiffuse","opacity","join","EffectComposer","renderTarget","parameters","minFilter","LinearFilter","magFilter","format","RGBAFormat","stencilBuffer","size","getDrawingBufferSize","Vector2","WebGLRenderTarget","name","renderTarget1","renderTarget2","passes","copyPass","_previousFrameTime","Date","now","swapBuffers","tmp","addPass","pass","push","insertPass","index","splice","currentRenderTarget","getRenderTarget","il","length","stencilFunc","NOTEQUAL","reset","dispose","RenderPass","overrideMaterial","clearColor","clearAlpha","clearDepth","oldClearColor","oldClearAlpha","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","autoClearColor","autoClearDepth","autoClearStencil","DigitalGlitch","tDisp","byp","amount","angle","seed","seed_x","seed_y","distortion_x","distortion_y","col_s","GlitchPass","dt_size","generateHeightmap","factor","max","_Math","randFloat","PI","data_arr","Float32Array","val","DataTexture","RGBFormat","FloatType","needsUpdate","applySpring","applyThree","Effects","down","gl","composer","useEffect","attachArray","HomeText","children","vAlign","hAlign","props","font","useLoader","fontUrl","config","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","mesh","useUpdate","self","computeBoundingBox","boundingBox","getSize","x","y","JumboText","clock","z","getElapsedTime","top","mouse","scrollMax","spotLight","intensity","interpolate","fallback","center","className","HomePage","useSpring","useState","setDown","onMouseMove","useCallback","clientX","clientY","window","innerWidth","innerHeight","onMouseUp","onMouseDown","onCreated","toneMapping","sections","pages","zoom","paragraphs","offset","header","aspect","text","stripes","diamonds","pos","Vector3","createRef","offsetContext","createContext","Block","useBlock","parentOffset","sectionHeight","curY","curTop","lerp","Provider","useContext","viewportWidth","viewportHeight","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","offsetFactor","Text","left","right","bottom","layers","fontSize","data","FontLoader","geom","usePromise","Promise","res","TextBufferGeometry","onUpdate","box","last","shift","transparent","CustomMaterial","hasTexture","Color","extend","Plane","forwardRef","Paragraph","image","w","alignRight","pixelWidth","style","textAlign","tabIndex","Content","img","img2","img3","img4","img5","img6","images","forEach","Startup","BackfaceMaterial","side","BackSide","RefractionMaterial","options","envMap","backfaceMap","resolution","dummy","Object3D","Diamond","gltf","GLTFLoader","dim","model","ratio","getPixelRatio","envFbo","backfaceFbo","backfaceMaterial","refractionMaterial","t","copy","updateMatrix","setMatrixAt","matrix","instanceMatrix","__$","AboutPage","scrollArea","onScroll","e","target","scrollTop","concurrent","pixelRatio","orthographic","_","id","MainContainer","styled","div","Icon","FontAwesomeIcon","Anchor","a","SocialContainer","ContactPage","display","listStyleType","href","icon","faInstagram","faFacebookSquare","faLinkedin","faGithubSquare","faBaby","Nav","nav","NavLinks","ul","Li","li","StyledLink","Link","Navbar","to","App","exact","path","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5f866717.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MOONGET_Heavy.8432a448.blob\";","module.exports = __webpack_public_path__ + \"static/media/bold.b192a12d.blob\";","module.exports = __webpack_public_path__ + \"static/media/nature.c42f350c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/music.2ff1efba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ying.8902fb33.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dog.ac1897c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pyramids.ec860f9b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dream.2af9929b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/diamond.fcf182f3.glb\";","import React from 'react'\nimport { useThree } from 'react-three-fiber'\n\nimport { a } from 'react-spring/three'\n\nconst Background = ({ color }) => {\n    const { viewport } = useThree();\n\n    console.log(color)\n    return (\n        <mesh scale ={[viewport.width, viewport.height, 1]} visible>\n            <planeBufferGeometry attach=\"geometry\" args={[1, 1]} />\n            <a.meshBasicMaterial attach=\"material\" color={color} depthTest={false} />\n        </mesh>\n    )\n}\n\nexport default Background;","import * as THREE from 'three'\nimport React, { useMemo, useRef } from 'react'\nimport { useFrame } from 'react-three-fiber'\nimport { a } from 'react-spring/three'\n\nconst Stars = ({ position, color }) => {\n    console.log(color)\n    let group = useRef();\n    let theta = 0;\n\n    useFrame(() => {\n        const r = 5 * Math.sin(THREE.Math.degToRad((theta += 0.01)))\n        const s = Math.cos(THREE.Math.degToRad(theta * 2))\n        group.current.rotation.set(r, r, r)\n        group.current.scale.set(s, s, s)\n    })\n\n    const [geo, mat, coords] = useMemo(() => {\n        const geo = new THREE.SphereBufferGeometry(1.2, 10, 10)\n        const mat = new THREE.MeshNormalMaterial()\n        const coords = new Array(1000).fill().map(i => [Math.random() * 800 - 400, Math.random() * 800 - 400, Math.random() * 800 - 400])\n        return [geo, mat, coords]\n    }, [])\n\n    return (\n        <a.group ref={group} position={position}>\n            {coords.map(([p1, p2, p3], i) => (\n                <mesh key={i} geometry={geo} material={mat} position={[p1, p2, p3]} />\n            ))}\n        </a.group>\n    )\n}\n\nexport default Stars;","var Pass = function() {\n    // if set to true, the pass is processed by the composer\n    this.enabled = true\n  \n    // if set to true, the pass indicates to swap read and write buffer after rendering\n    this.needsSwap = true\n  \n    // if set to true, the pass clears its buffer before rendering\n    this.clear = false\n  \n    // if set to true, the result of the pass is rendered to screen\n    this.renderToScreen = false\n  }\n  \n  Object.assign(Pass.prototype, {\n    setSize: function(width, height) {},\n  \n    render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n      console.error('THREE.Pass: .render() must be implemented in derived pass.')\n    },\n  })\n  \n  export { Pass }","import { Pass } from './Pass.js'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar MaskPass = function(scene, camera) {\n  Pass.call(this)\n\n  this.scene = scene\n  this.camera = camera\n\n  this.clear = true\n  this.needsSwap = false\n\n  this.inverse = false\n}\n\nMaskPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: MaskPass,\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    var context = renderer.context\n    var state = renderer.state\n\n    // don't update color or depth\n\n    state.buffers.color.setMask(false)\n    state.buffers.depth.setMask(false)\n\n    // lock buffers\n\n    state.buffers.color.setLocked(true)\n    state.buffers.depth.setLocked(true)\n\n    // set up stencil\n\n    var writeValue, clearValue\n\n    if (this.inverse) {\n      writeValue = 0\n      clearValue = 1\n    } else {\n      writeValue = 1\n      clearValue = 0\n    }\n\n    state.buffers.stencil.setTest(true)\n    state.buffers.stencil.setOp(context.REPLACE, context.REPLACE, context.REPLACE)\n    state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 0xffffffff)\n    state.buffers.stencil.setClear(clearValue)\n\n    // draw into the stencil buffer\n\n    renderer.setRenderTarget(readBuffer)\n    if (this.clear) renderer.clear()\n    renderer.render(this.scene, this.camera)\n\n    renderer.setRenderTarget(writeBuffer)\n    if (this.clear) renderer.clear()\n    renderer.render(this.scene, this.camera)\n\n    // unlock color and depth buffer for subsequent rendering\n\n    state.buffers.color.setLocked(false)\n    state.buffers.depth.setLocked(false)\n\n    // only render where stencil is set to 1\n\n    state.buffers.stencil.setFunc(context.EQUAL, 1, 0xffffffff) // draw if == 1\n    state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP)\n  },\n})\n\nvar ClearMaskPass = function() {\n  Pass.call(this)\n\n  this.needsSwap = false\n}\n\nClearMaskPass.prototype = Object.create(Pass.prototype)\n\nObject.assign(ClearMaskPass.prototype, {\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    renderer.state.buffers.stencil.setTest(false)\n  },\n})\n\nexport { ClearMaskPass, MaskPass }\n","import { Mesh, OrthographicCamera, PlaneBufferGeometry, Scene, ShaderMaterial, UniformsUtils } from 'three/src/Three'\nimport { Pass } from './Pass.js'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar ShaderPass = function(shader, textureID) {\n  Pass.call(this)\n\n  this.textureID = textureID !== undefined ? textureID : 'tDiffuse'\n\n  if (shader instanceof ShaderMaterial) {\n    this.uniforms = shader.uniforms\n\n    this.material = shader\n  } else if (shader) {\n    this.uniforms = UniformsUtils.clone(shader.uniforms)\n\n    this.material = new ShaderMaterial({\n      defines: Object.assign({}, shader.defines),\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n    })\n  }\n\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1)\n  this.scene = new Scene()\n\n  this.quad = new Mesh(new PlaneBufferGeometry(2, 2), null)\n  this.quad.frustumCulled = false // Avoid getting clipped\n  this.scene.add(this.quad)\n}\n\nShaderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: ShaderPass,\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture\n    }\n\n    this.quad.material = this.material\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      renderer.render(this.scene, this.camera)\n    } else {\n      renderer.setRenderTarget(writeBuffer)\n      if (this.clear) renderer.clear()\n      renderer.render(this.scene, this.camera)\n    }\n  },\n})\n\nexport { ShaderPass }\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nvar CopyShader = {\n    uniforms: {\n      tDiffuse: { value: null },\n      opacity: { value: 1.0 },\n    },\n  \n    vertexShader: [\n      'varying vec2 vUv;',\n      'void main() {',\n      'vUv = uv;',\n      'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n      '}',\n    ].join('\\n'),\n  \n    fragmentShader: [\n      'uniform float opacity;',\n      'uniform sampler2D tDiffuse;',\n      'varying vec2 vUv;',\n      'void main() {',\n      'vec4 texel = texture2D( tDiffuse, vUv );',\n      'gl_FragColor = opacity * texel;',\n      '}',\n    ].join('\\n'),\n  }\n  \n  export { CopyShader }\n  ","import { ClearMaskPass, MaskPass } from './MaskPass.js'\nimport { ShaderPass } from './ShaderPass.js'\nimport { CopyShader } from '../shaders/CopyShader.js'\nimport { LinearFilter, RGBAFormat, Vector2, WebGLRenderTarget } from 'three/src/Three'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar EffectComposer = function(renderer, renderTarget) {\n  this.renderer = renderer\n\n  if (renderTarget === undefined) {\n    var parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBAFormat,\n      stencilBuffer: false,\n    }\n\n    var size = renderer.getDrawingBufferSize(new Vector2())\n    renderTarget = new WebGLRenderTarget(size.width, size.height, parameters)\n    renderTarget.texture.name = 'EffectComposer.rt1'\n  }\n\n  this.renderTarget1 = renderTarget\n  this.renderTarget2 = renderTarget.clone()\n  this.renderTarget2.texture.name = 'EffectComposer.rt2'\n  this.writeBuffer = this.renderTarget1\n  this.readBuffer = this.renderTarget2\n  this.passes = []\n\n  // dependencies\n  if (CopyShader === undefined) {\n    console.error('THREE.EffectComposer relies on THREE.CopyShader')\n  }\n  if (ShaderPass === undefined) {\n    console.error('THREE.EffectComposer relies on THREE.ShaderPass')\n  }\n  this.copyPass = new ShaderPass(CopyShader)\n  this._previousFrameTime = Date.now()\n}\n\nObject.assign(EffectComposer.prototype, {\n  swapBuffers: function() {\n    var tmp = this.readBuffer\n    this.readBuffer = this.writeBuffer\n    this.writeBuffer = tmp\n  },\n\n  addPass: function(pass) {\n    this.passes.push(pass)\n    var size = this.renderer.getDrawingBufferSize(new Vector2())\n    pass.setSize(size.width, size.height)\n  },\n\n  insertPass: function(pass, index) {\n    this.passes.splice(index, 0, pass)\n  },\n\n  render: function(deltaTime) {\n    // deltaTime value is in seconds\n    if (deltaTime === undefined) {\n      deltaTime = (Date.now() - this._previousFrameTime) * 0.001\n    }\n    this._previousFrameTime = Date.now()\n    var currentRenderTarget = this.renderer.getRenderTarget()\n    var maskActive = false\n    var pass,\n      i,\n      il = this.passes.length\n\n    for (i = 0; i < il; i++) {\n      pass = this.passes[i]\n      if (pass.enabled === false) continue\n\n      pass.render(this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive)\n      if (pass.needsSwap) {\n        if (maskActive) {\n          var context = this.renderer.context\n          context.stencilFunc(context.NOTEQUAL, 1, 0xffffffff)\n          this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, deltaTime)\n          context.stencilFunc(context.EQUAL, 1, 0xffffffff)\n        }\n        this.swapBuffers()\n      }\n      if (MaskPass !== undefined) {\n        if (pass instanceof MaskPass) {\n          maskActive = true\n        } else if (pass instanceof ClearMaskPass) {\n          maskActive = false\n        }\n      }\n    }\n    this.renderer.setRenderTarget(currentRenderTarget)\n  },\n\n  reset: function(renderTarget) {\n    if (renderTarget === undefined) {\n      var size = this.renderer.getDrawingBufferSize(new Vector2())\n      renderTarget = this.renderTarget1.clone()\n      renderTarget.setSize(size.width, size.height)\n    }\n    this.renderTarget1.dispose()\n    this.renderTarget2.dispose()\n    this.renderTarget1 = renderTarget\n    this.renderTarget2 = renderTarget.clone()\n    this.writeBuffer = this.renderTarget1\n    this.readBuffer = this.renderTarget2\n  },\n  setSize: function(width, height) {\n    this.renderTarget1.setSize(width, height)\n    this.renderTarget2.setSize(width, height)\n    for (var i = 0; i < this.passes.length; i++) {\n      this.passes[i].setSize(width, height)\n    }\n  },\n})\n\nexport { EffectComposer }\n","import { Pass } from './Pass.js'\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar RenderPass = function(scene, camera, overrideMaterial, clearColor, clearAlpha) {\n  Pass.call(this)\n\n  this.scene = scene\n  this.camera = camera\n\n  this.overrideMaterial = overrideMaterial\n\n  this.clearColor = clearColor\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0\n\n  this.clear = true\n  this.clearDepth = false\n  this.needsSwap = false\n}\n\nRenderPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: RenderPass,\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    var oldAutoClear = renderer.autoClear\n    renderer.autoClear = false\n\n    this.scene.overrideMaterial = this.overrideMaterial\n\n    var oldClearColor, oldClearAlpha\n\n    if (this.clearColor) {\n      oldClearColor = renderer.getClearColor().getHex()\n      oldClearAlpha = renderer.getClearAlpha()\n\n      renderer.setClearColor(this.clearColor, this.clearAlpha)\n    }\n\n    if (this.clearDepth) {\n      renderer.clearDepth()\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer)\n\n    // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n    if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil)\n    renderer.render(this.scene, this.camera)\n\n    if (this.clearColor) {\n      renderer.setClearColor(oldClearColor, oldClearAlpha)\n    }\n\n    this.scene.overrideMaterial = null\n    renderer.autoClear = oldAutoClear\n  },\n})\n\nexport { RenderPass }\n","/**\n * @author felixturner / http://airtight.cc/\n *\n * RGB Shift Shader\n * Shifts red and blue channels from center in opposite directions\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n * by Tom Butterworth / http://kriss.cx/tom/\n *\n * amount: shift distance (1 is width of input)\n * angle: shift angle in radians\n */\n\nvar DigitalGlitch = {\n    uniforms: {\n      tDiffuse: { value: null }, //diffuse texture\n      tDisp: { value: null }, //displacement texture for digital glitch squares\n      byp: { value: 0 }, //apply the glitch ?\n      amount: { value: 0.08 },\n      angle: { value: 0.02 },\n      seed: { value: 0.02 },\n      seed_x: { value: 0.02 }, //-1,1\n      seed_y: { value: 0.02 }, //-1,1\n      distortion_x: { value: 0.5 },\n      distortion_y: { value: 0.6 },\n      col_s: { value: 0.05 },\n    },\n  \n    vertexShader: [\n      'varying vec2 vUv;',\n      'void main() {',\n      'vUv = uv;',\n      'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n      '}',\n    ].join('\\n'),\n  \n    fragmentShader: [\n      'uniform int byp;', //should we apply the glitch ?\n      'uniform sampler2D tDiffuse;',\n      'uniform sampler2D tDisp;',\n      'uniform float amount;',\n      'uniform float angle;',\n      'uniform float seed;',\n      'uniform float seed_x;',\n      'uniform float seed_y;',\n      'uniform float distortion_x;',\n      'uniform float distortion_y;',\n      'uniform float col_s;',\n      'varying vec2 vUv;',\n      'float rand(vec2 co){',\n      'return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);',\n      '}',\n      'void main() {',\n      'if(byp<1) {',\n      'vec2 p = vUv;',\n      'float xs = floor(gl_FragCoord.x / 0.5);',\n      'float ys = floor(gl_FragCoord.y / 0.5);',\n      //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n      'vec4 normal = texture2D (tDisp, p*seed*seed);',\n      'if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {',\n      'if(seed_x>0.){',\n      'p.y = 1. - (p.y + distortion_y);',\n      '}',\n      'else {',\n      'p.y = distortion_y;',\n      '}',\n      '}',\n      'if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {',\n      'if(seed_y>0.){',\n      'p.x=distortion_x;',\n      '}',\n      'else {',\n      'p.x = 1. - (p.x + distortion_x);',\n      '}',\n      '}',\n      'p.x+=normal.x*seed_x*(seed/5.);',\n      'p.y+=normal.y*seed_y*(seed/5.);',\n      //base from RGB shift shader\n      'vec2 offset = amount * vec2( cos(angle), sin(angle));',\n      'vec4 cr = texture2D(tDiffuse, p + offset);',\n      'vec4 cga = texture2D(tDiffuse, p);',\n      'vec4 cb = texture2D(tDiffuse, p - offset);',\n      'gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);',\n      //add noise\n      'vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.05);',\n      'gl_FragColor = gl_FragColor+ snow;',\n      '}',\n      'else {',\n      'gl_FragColor=texture2D (tDiffuse, vUv);',\n      '}',\n      '}',\n    ].join('\\n'),\n  }\n  \n  export { DigitalGlitch }\n  ","import {\n    DataTexture,\n    FloatType,\n    Math as _Math,\n    Mesh,\n    OrthographicCamera,\n    PlaneBufferGeometry,\n    RGBFormat,\n    Scene,\n    ShaderMaterial,\n    UniformsUtils,\n  } from 'three/src/Three'\n  import { DigitalGlitch } from '../shaders/DigitalGlitch.js'\n  import { Pass } from './Pass.js'\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n  \n  var GlitchPass = function(dt_size) {\n    Pass.call(this)\n    if (DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on THREE.DigitalGlitch')\n    var shader = DigitalGlitch\n    this.uniforms = UniformsUtils.clone(shader.uniforms)\n    if (dt_size === undefined) dt_size = 64\n    this.uniforms['tDisp'].value = this.generateHeightmap(dt_size)\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n    })\n    this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1)\n    this.scene = new Scene()\n    this.quad = new Mesh(new PlaneBufferGeometry(2, 2), null)\n    this.quad.frustumCulled = false // Avoid getting clipped\n    this.scene.add(this.quad)\n    this.factor = 0\n  }\n  \n  GlitchPass.prototype = Object.assign(Object.create(Pass.prototype), {\n    constructor: GlitchPass,\n  \n    render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n      const factor = Math.max(0, this.factor)\n      this.uniforms['tDiffuse'].value = readBuffer.texture\n      this.uniforms['seed'].value = Math.random() * factor //default seeding\n      this.uniforms['byp'].value = 0\n      if (factor) {\n        this.uniforms['amount'].value = (Math.random() / 90) * factor\n        this.uniforms['angle'].value = _Math.randFloat(-Math.PI, Math.PI) * factor\n        this.uniforms['distortion_x'].value = _Math.randFloat(0, 1) * factor\n        this.uniforms['distortion_y'].value = _Math.randFloat(0, 1) * factor\n        this.uniforms['seed_x'].value = _Math.randFloat(-0.3, 0.3) * factor\n        this.uniforms['seed_y'].value = _Math.randFloat(-0.3, 0.3) * factor\n      } else this.uniforms['byp'].value = 1\n      this.quad.material = this.material\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null)\n        renderer.render(this.scene, this.camera)\n      } else {\n        renderer.setRenderTarget(writeBuffer)\n        if (this.clear) renderer.clear()\n        renderer.render(this.scene, this.camera)\n      }\n    },\n  \n    generateHeightmap: function(dt_size) {\n      var data_arr = new Float32Array(dt_size * dt_size * 3)\n      var length = dt_size * dt_size\n  \n      for (var i = 0; i < length; i++) {\n        var val = _Math.randFloat(0, 1)\n        data_arr[i * 3 + 0] = val\n        data_arr[i * 3 + 1] = val\n        data_arr[i * 3 + 2] = val\n      }\n  \n      var texture = new DataTexture(data_arr, dt_size, dt_size, RGBFormat, FloatType)\n      texture.needsUpdate = true\n      return texture\n    },\n  })\n  \n  export { GlitchPass }\n  ","import React, { useEffect, useRef } from 'react'\nimport { extend as applyThree, useFrame, useThree } from 'react-three-fiber'\nimport { apply as applySpring, a } from 'react-spring/three'\nimport { EffectComposer } from '../postprocessing/EffectComposer'\nimport { RenderPass } from '../postprocessing/RenderPass'\nimport { GlitchPass } from '../postprocessing/GlitchPass'\n\napplySpring({ EffectComposer, RenderPass, GlitchPass })\napplyThree({ EffectComposer, RenderPass, GlitchPass })\n\n/**\n * This component creates a glitch effect\n */\nconst Effects = ({ down }) => {\n    console.log(down)\n    const { gl, scene, camera, size } = useThree()\n    const composer = useRef()\n\n    useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n\n    // This takes over as the main render-loop (when 2nd arg is set to true)\n    useFrame(() => composer.current.render(), 1)\n\n    return (\n      <effectComposer ref={composer} args={[gl]}>\n        <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n        <glitchPass attachArray=\"passes\" renderToScreen factor={down ? 1 : 0} />\n      </effectComposer>\n    )\n}\n\nexport default Effects;","import * as THREE from 'three'\nimport React, { useMemo } from 'react'\nimport { useLoader, useUpdate } from 'react-three-fiber'\nimport fontUrl from '../assets/bold.blob'\n\nconst HomeText = ({ children, vAlign = 'center', hAlign = 'center', size = 1, color = '#000000', ...props }) => {\n  const font = useLoader(THREE.FontLoader, fontUrl)\n  const config = useMemo(\n    () => ({ font, size: 30, height: 30, curveSegments: 32, bevelEnabled: true, bevelThickness: 6, bevelSize: 2.5, bevelOffset: 0, bevelSegments: 8 }),\n    [font]\n  )\n\n  const mesh = useUpdate(\n    self => {\n        const size = new THREE.Vector3()\n        self.geometry.computeBoundingBox()\n        self.geometry.boundingBox.getSize(size)\n        self.position.x = hAlign === 'center' ? -size.x / 2 : hAlign === 'right' ? 0 : -size.x\n        self.position.y = vAlign === 'center' ? -size.y / 2 : vAlign === 'top' ? 0 : -size.y\n    },\n    [children]\n  )\n\n  return (\n    <group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n        <mesh ref={mesh}>\n            <textGeometry attach=\"geometry\" args={[children, config]} />\n            <meshNormalMaterial attach=\"material\" />\n        </mesh>\n    </group>\n  )\n}\n\nexport default HomeText;\n","import React, { useRef } from 'react'\nimport HomeText from './HomeText'\nimport { useFrame } from 'react-three-fiber'\n\nconst JumboText = () => {\n    const ref = useRef()\n    useFrame(({ clock }) => (ref.current.rotation.x = ref.current.rotation.y = ref.current.rotation.z = Math.sin(clock.getElapsedTime()) * 0.1))\n    \n    return (\n      <group ref={ref}>\n        <HomeText hAlign=\"left\" position={[6, 2, 0]} children=\"HELLO\" />\n        <HomeText hAlign=\"left\" position={[8, -2, 0]} children=\"WORLD\" />\n      </group>\n    )\n}\n\nexport default JumboText;","import React, { Suspense } from 'react'\nimport { useThree, Dom } from 'react-three-fiber'\nimport { a } from 'react-spring/three';\n\nimport Background from './Background';\nimport Stars from './Stars';\nimport Effects from './Effects';\nimport JumboText from './JumboText';\n\nconst Scene = ({ top, mouse, down }) => {\n    const { size } = useThree()\n    const scrollMax = size.height * 4.5\n    \n    return (\n        <>\n            <a.spotLight intensity={1.2} color=\"#272727\" position={mouse.interpolate((x, y) => [x / 100, -y / 100, 6.5])} />\n            <Suspense fallback={<Dom center className=\"loading\" children=\"Loading...\" />}>\n                <Effects down={down}/>\n                <Background color={top.interpolate([0, scrollMax * 0.25, scrollMax * 0.8, scrollMax], ['#27282F', '#247BA0', '#70C1B3', '#f8f3f1'])}  />\n                <Stars color='peachpuff' />\n                <JumboText />\n            </Suspense>\n        </>\n    );\n}\n\nexport default Scene;","import React, { useState, useCallback } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { useSpring } from \"react-spring/three\";\n\nimport Scene from \"../components/Scene\";\n\nimport * as THREE from \"three\";\n\nconst HomePage = () => {\n    const [{ top, mouse }, set] = useSpring(() => ({ top: 0, mouse: [0, 0] }));\n    const [down, setDown] = useState(false);\n\n    const onMouseMove = useCallback(\n        ({ clientX: x, clientY: y }) =>\n            set({\n                mouse: [x - window.innerWidth / 2, y - window.innerHeight / 2],\n            }),\n        []\n    );\n\n    return (\n        <>\n            <Canvas\n                camera={{ position: [0, 0, 15] }}\n                onMouseMove={onMouseMove}\n                onMouseUp={() => setDown(false)}\n                onMouseDown={() => setDown(true)}\n                onCreated={({ gl }) => {\n                    gl.toneMapping = THREE.Uncharted2ToneMapping;\n                    gl.setClearColor(new THREE.Color(\"#272727\"));\n                }}\n            >\n                <Scene top={top} mouse={mouse} down={down} />\n            </Canvas>\n        </>\n    );\n};\n\nexport default HomePage;\n","import { createRef } from 'react';\nimport { Vector3 } from 'three';\n\nconst state = {\n  sections: 9,\n  pages: 8,\n  zoom: 75,\n  paragraphs: [\n    {\n      offset: 1,\n      factor: 1.75,\n      header: 'Nature',\n      aspect: 1.51,\n      text:\n        'There is no better designer than nature. Nature is about balance. All the world comes in pairs - Yin and Yang, right and wrong, men and women; whats pleasure without pain?',\n    },\n    {\n      offset: 2,\n      factor: 2.0,\n      header: 'Music',\n      aspect: 1.5,\n      text:\n        'Music gives a soul to the universe, wings to the mind, and flight to the imagination. Everything in the universe has a rhythm, everything dances.',\n    },\n    {\n      offset: 3,\n      factor: 2.25,\n      header: 'Balance',\n      aspect: 1.5037,\n      text:\n        'Yin and yang, male and female, strong and weak, rigid and tender, heaven and earth, light and darkness, thunder and lightning, cold and warmth, good and evil...the interplay of opposite principles constitutes the universe.',\n    },\n    {\n      offset: 4,\n      factor: 2.0,\n      header: 'Meh',\n      aspect: 0.665,\n      text:\n        'I think the next best thing to solving a problem is finding some humor in it.',\n    },\n    {\n      offset: 5,\n      factor: 1.75,\n      header: 'Roots',\n      aspect: 1.55,\n      text:\n        'We inherit from our ancestors gifts so often taken for granted. Each of us contains within this inheritance of soul. We are links between the ages, containing past and present expectations, sacred memories and future promise.',\n    },\n    {\n      offset: 7,\n      factor: 1.05,\n      header: 'The Factory',\n      aspect: 1.77,\n      text:\n        'Every great dream begins with a dreamer. Always remember, you have within you the strength, the patience, and the passion to reach for the stars to change the world.',\n    },\n  ],\n  stripes: [\n    { offset: 0, color: '#000', height: 13 },\n    { offset: 6.3, color: '#000', height: 20 },\n  ],\n  diamonds: [\n    { x: 0, offset: 0, pos: new Vector3(), scale: 0.6, factor: 1.8 },\n    //   { x: 2, offset: 1.1, pos: new Vector3(), scale: 0.8, factor: 2.1 },\n    //   { x: -5, offset: 2, pos: new Vector3(), scale: 0.8, factor: 2.5 },\n    //   { x: 0, offset: 3.2, pos: new Vector3(), scale: 0.8, factor: 1.75 },\n    //   { x: 0, offset: 4, pos: new Vector3(), scale: 0.8, factor: 2.5 },\n    //   { x: 2, offset: 5.5, pos: new Vector3(), scale: 1.25, factor: 0.85 },\n    //   { x: -5, offset: 7, pos: new Vector3(), scale: 0.8, factor: 2 },\n    //   { x: 0, offset: 8, pos: new Vector3(), scale: 1.5, factor: 6 },\n  ],\n  top: createRef(),\n};\n\nexport default state;\n","import React, { createContext, useRef, useContext } from \"react\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport lerp from \"lerp\";\nimport state from \"./Store\";\n\nconst offsetContext = createContext(0);\n\nfunction Block({ children, offset, factor, ...props }) {\n  const { offset: parentOffset, sectionHeight } = useBlock();\n  const ref = useRef();\n  offset = offset !== undefined ? offset : parentOffset;\n\n  useFrame(() => {\n    const curY = ref.current.position.y;\n    const curTop = state.top.current;\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1);\n  });\n\n  return (\n    <offsetContext.Provider value={offset}>\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\n        <group ref={ref}>{children}</group>\n      </group>\n    </offsetContext.Provider>\n  );\n}\n\nfunction useBlock() {\n  const { sections, pages, zoom } = state;\n  const { size, viewport } = useThree();\n  const offset = useContext(offsetContext);\n  const viewportWidth = viewport.width;\n  const viewportHeight = viewport.height;\n  const canvasWidth = viewportWidth / zoom;\n  const canvasHeight = viewportHeight / zoom;\n  const mobile = size.width < 700;\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1);\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6);\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1));\n  const offsetFactor = (offset + 1.0) / sections;\n\n  return {\n    viewport,\n    offset,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    mobile,\n    margin,\n    contentMaxWidth,\n    sectionHeight,\n    offsetFactor,\n  };\n}\n\nexport { Block, useBlock };\n","import React, { useMemo, useCallback, useRef } from 'react';\nimport { FontLoader, Vector3, TextBufferGeometry } from 'three';\nimport { useLoader, useFrame, useThree } from 'react-three-fiber';\nimport usePromise from 'react-promise-suspense';\nimport lerp from 'lerp';\nimport state from './Store';\nimport font from '../../assets/MOONGET_Heavy.blob';\n\nconst Text = ({\n  children,\n  position,\n  opacity = 1,\n  color = 'white',\n  size = 1,\n  left,\n  right,\n  top,\n  bottom,\n  height = 0.01,\n  layers = 0,\n  fontSize = 410,\n  ...props\n}) => {\n  const data = useLoader(FontLoader, font);\n  const geom = usePromise(\n    () =>\n      new Promise((res) =>\n        res(\n          new TextBufferGeometry(children, {\n            font: data,\n            size: 1,\n            height,\n            curveSegments: 32,\n          })\n        )\n      ),\n    [children]\n  );\n\n  const onUpdate = useCallback(\n    (self) => {\n      const box = new Vector3();\n      self.geometry.computeBoundingBox();\n      self.geometry.boundingBox.getSize(box);\n      self.position.x = left ? 0 : right ? -box.x : -box.x / 2;\n      self.position.y = top ? 0 : bottom ? -box.y : -box.y / 2;\n    },\n    [left, right, top, bottom]\n  );\n\n  const ref = useRef();\n  let last = state.top.current;\n\n  useFrame(() => {\n    ref.current.shift = lerp(\n      ref.current.shift,\n      (state.top.current - last) / 100,\n      0.1\n    );\n    last = state.top.current;\n  });\n\n  // const {\n  //   size: { width, height },\n  //   viewport: { width: viewportWidth, height: viewportHeight },\n  // } = useThree();\n\n  // const scale = viewportWidth > viewportHeight ? viewportWidth : viewportHeight;\n\n  // const canvas = useMemo(() => {\n  //   const canvas = document.createElement(\"canvas\");\n  //   canvas.width = canvas.height = 2048;\n  //   const context = canvas.getContext(\"2d\");\n  //   context.font = `bold ${fontSize}px -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif`;\n  //   context.textAlign = \"center\";\n  //   context.textBaseline = \"middle\";\n  //   context.fillStyle = color;\n  //   context.fillText(children, 1024, 1024 - 410 / 2);\n  //   return canvas;\n  // }, [children, width, height]);\n\n  return (\n    <group {...props} scale={[size, size, 0.1]}>\n      <mesh geometry={geom} onUpdate={onUpdate} frustumCulled={false}>\n        <customMaterial\n          ref={ref}\n          attach=\"material\"\n          color={color}\n          transparent\n          opacity={opacity}\n        />\n      </mesh>\n    </group>\n    // <sprite scale={[scale, scale, 1]} position={position}>\n    //   <spriteMaterial attach=\"material\" transparent opacity={opacity}>\n    //     <canvasTexture\n    //       attach=\"map\"\n    //       image={canvas}\n    //       premultiplyAlpha\n    //       onUpdate={(s) => (s.needsUpdate = true)}\n    //     />\n    //   </spriteMaterial>\n    // </sprite>\n  );\n};\n\nconst MultilineText = ({\n  text,\n  size = 1,\n  lineHeight = 1,\n  position = [0, 0, 0],\n  ...props\n}) =>\n  text\n    .split('\\n')\n    .map((text, index) => (\n      <Text\n        key={index}\n        size={size}\n        {...props}\n        position={[position[0], position[1] - index * lineHeight, position[2]]}\n        children={text}\n      />\n    ));\n\nconst MainText = ({\n  children,\n  size = 1,\n  left,\n  right,\n  top,\n  bottom,\n  color = 'white',\n  opacity = 1,\n  height = 0.01,\n  layers = 0,\n  ...props\n}) => {\n  const data = useLoader(FontLoader, font);\n\n  const geom = usePromise(\n    () =>\n      new Promise((res) =>\n        res(\n          new TextBufferGeometry(children, {\n            font: data,\n            size: 1,\n            height,\n            curveSegments: 32,\n          })\n        )\n      ),\n    [children]\n  );\n\n  const onUpdate = useCallback(\n    (self) => {\n      const box = new Vector3();\n      self.geometry.computeBoundingBox();\n      self.geometry.boundingBox.getSize(box);\n      self.position.x = left ? 0 : right ? -box.x : -box.x / 2;\n      self.position.y = top ? 0 : bottom ? -box.y : -box.y / 2;\n    },\n    [left, right, top, bottom]\n  );\n\n  const ref = useRef();\n  let last = state.top.current;\n  useFrame(() => {\n    ref.current.shift = lerp(\n      ref.current.shift,\n      (state.top.current - last) / 100,\n      0.1\n    );\n    last = state.top.current;\n  });\n\n  return (\n    <group {...props} scale={[size, size, 0.1]}>\n      <mesh geometry={geom} onUpdate={onUpdate} frustumCulled={false}>\n        <customMaterial\n          ref={ref}\n          attach=\"material\"\n          color={color}\n          transparent\n          opacity={opacity}\n        />\n      </mesh>\n    </group>\n  );\n};\n\nexport { Text, MultilineText, MainText };\n","import { ShaderMaterial, Color } from \"three\"\nimport { extend } from \"react-three-fiber\"\n\nclass CustomMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      vertexShader: `uniform float scale;\n      uniform float shift;\n      varying vec2 vUv;\n      void main() {\n        vec3 pos = position;\n        pos.y = pos.y + ((sin(uv.x * 3.1415926535897932384626433832795) * shift * 2.0) * 0.125);\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n      }`,\n      fragmentShader: `uniform sampler2D texture;\n      uniform float hasTexture;\n      uniform float shift;\n      uniform float scale;\n      uniform vec3 color;\n      uniform float opacity;\n      varying vec2 vUv;\n      void main() {\n        float angle = 1.55;\n        vec2 p = (vUv - vec2(0.5, 0.5)) * (1.0 - scale) + vec2(0.5, 0.5);\n        vec2 offset = shift / 4.0 * vec2(cos(angle), sin(angle));\n        vec4 cr = texture2D(texture, p + offset);\n        vec4 cga = texture2D(texture, p);\n        vec4 cb = texture2D(texture, p - offset);\n        if (hasTexture == 1.0) gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n        else gl_FragColor = vec4(color, opacity);\n      }`,\n      uniforms: {\n        texture: { value: null },\n        hasTexture: { value: 0 },\n        scale: { value: 0 },\n        shift: { value: 0 },\n        opacity: { value: 1 },\n        color: { value: new Color(\"white\") }\n      }\n    })\n  }\n\n  set scale(value) {\n    this.uniforms.scale.value = value\n  }\n\n  get scale() {\n    return this.uniforms.scale.value\n  }\n\n  set shift(value) {\n    this.uniforms.shift.value = value\n  }\n\n  get shift() {\n    return this.uniforms.shift.value\n  }\n\n  set map(value) {\n    this.uniforms.hasTexture.value = !!value\n    this.uniforms.texture.value = value\n  }\n\n  get map() {\n    return this.uniforms.texture.value\n  }\n\n  get color() {\n    return this.uniforms.color.value\n  }\n\n  get opacity() {\n    return this.uniforms.opacity.value\n  }\n\n  set opacity(value) {\n    if (this.uniforms) this.uniforms.opacity.value = value\n  }\n}\n\nextend({ CustomMaterial })\n","import React, { forwardRef, useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\nimport lerp from 'lerp';\nimport './CustomMaterial';\nimport { useBlock } from './Blocks';\nimport state from './Store';\n\nconst Plane = forwardRef(\n  ({ color = 'white', shift = 1, opacity = 1, args, map, ...props }, ref) => {\n    const { viewportHeight, offsetFactor } = useBlock();\n    const material = useRef();\n    let last = state.top.current;\n\n    useFrame(() => {\n      const { pages, top } = state;\n      material.current.scale = lerp(\n        material.current.scale,\n        offsetFactor - top.current / ((pages - 1) * viewportHeight),\n        0.1\n      );\n      material.current.shift = lerp(\n        material.current.shift,\n        (top.current - last) / shift,\n        0.1\n      );\n      last = top.current;\n    });\n\n    return (\n      <mesh ref={ref} {...props}>\n        <planeBufferGeometry attach=\"geometry\" args={args} />\n        <customMaterial\n          ref={material}\n          attach=\"material\"\n          color=\"grey\"\n          map={map}\n          transparent\n          opacity={opacity}\n        />\n      </mesh>\n    );\n  }\n);\n\nexport default Plane;\n","import React, { useMemo } from \"react\";\nimport { Block, useBlock } from \"./Blocks\";\nimport { useLoader, Dom } from \"react-three-fiber\";\nimport { TextureLoader, LinearFilter } from \"three\";\nimport state from \"./Store\";\nimport { Text } from \"./Text\";\nimport Plane from \"./Plane\";\n\nconst Paragraph = ({ image, index, offset, factor, header, aspect, text }) => {\n  const { contentMaxWidth: w, canvasWidth, margin, mobile } = useBlock();\n  const size = aspect < 1 && !mobile ? 0.65 : 1;\n  const alignRight = (canvasWidth - w * size - margin) / 2;\n  const pixelWidth = w * state.zoom * size;\n  const left = !(index % 2);\n  const color = index % 2 ? \"#D40749\" : \"#2FE8C3\";\n  return (\n    <Block factor={factor} offset={offset}>\n      <group position={[left ? -alignRight : alignRight, 0, 0]}>\n        <Plane\n          map={image}\n          args={[1, 1, 32, 32]}\n          shift={75}\n          size={size}\n          aspect={aspect}\n          scale={[w * size, (w * size) / aspect, 1]}\n          frustumCulled={false}\n        />\n        <Dom\n          style={{\n            width: pixelWidth / (mobile ? 1 : 2),\n            textAlign: left ? \"left\" : \"right\",\n          }}\n          position={[\n            left || mobile ? (-w * size) / 2 : 0,\n            (-w * size) / 2 / aspect - 0.4,\n            1,\n          ]}\n        >\n          <div tabIndex={index}>{text}</div>\n        </Dom>\n        <Text\n          left={left}\n          right={!left}\n          size={w * 0.04}\n          color={color}\n          top\n          position={[\n            ((left ? -w : w) * size) / 2,\n            (w * size) / aspect / 2 + 0.5,\n            -1,\n          ]}\n        >\n          {header}\n        </Text>\n        <Block factor={0.2}>\n          <Text\n            opacity={0.5}\n            size={w * 0.1}\n            color=\"#1A1E2A\"\n            position={[\n              ((left ? w : -w) / 2) * size,\n              (w * size) / aspect / 1.5,\n              -10,\n            ]}\n          >\n            {\"0\" + (index + 1)}\n          </Text>\n        </Block>\n      </group>\n    </Block>\n  );\n};\n\nexport default Paragraph;\n","import React, { useMemo } from 'react';\nimport { Block, useBlock } from './Blocks';\nimport { Dom, useLoader } from 'react-three-fiber';\nimport { MainText, MultilineText } from './Text';\nimport { TextureLoader, LinearFilter } from 'three';\nimport state from './Store';\nimport Plane from './Plane';\nimport Paragraph from './Paragraph';\nimport * as THREE from 'three';\n\nimport img from '../../assets/nature.jpeg';\nimport img2 from '../../assets/music.jpg';\nimport img3 from '../../assets/ying.jpg';\nimport img4 from '../../assets/dog.jpg';\nimport img5 from '../../assets/pyramids.jpg';\nimport img6 from '../../assets/dream.jpg';\n\nconst Content = () => {\n  const [one, two, three, four, five, six] = useLoader(THREE.TextureLoader, [\n    img,\n    img2,\n    img3,\n    img4,\n    img5,\n    img6,\n  ]);\n\n  const images = [one, two, three, four, five, six];\n  console.log(images);\n\n  useMemo(\n    () => images.forEach((texture) => (texture.minFilter = LinearFilter)),\n    [images]\n  );\n\n  const { contentMaxWidth: w, canvasWidth, canvasHeight, mobile } = useBlock();\n\n  return (\n    <>\n      {state.paragraphs.map((props, index) => (\n        <Paragraph key={index} index={index} {...props} image={images[index]} />\n      ))}\n\n      {state.stripes.map(({ offset, color, height }, index) => (\n        <Block key={index} factor={-1.5} offset={offset}>\n          <Plane\n            args={[50, height, 32, 32]}\n            shift={-4}\n            color={color}\n            rotation={[0, 0, Math.PI / 8]}\n            position={[0, 0, -10]}\n          />\n        </Block>\n      ))}\n\n      <Block factor={1.25} offset={8}>\n        <Dom\n          className=\"bottom-left\"\n          position={[-canvasWidth / 2, -canvasHeight / 2, 0]}\n        >\n          There is only one thing that makes a dream impossible to achieve: the\n          fear of failure.\n        </Dom>\n      </Block>\n    </>\n  );\n};\n\nexport default Content;\n","import React, { useRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport lerp from \"lerp\";\nimport Plane from \"./Plane\";\n\nconst Startup = () => {\n  const ref = useRef();\n  useFrame(\n    () =>\n      (ref.current.material.opacity = lerp(\n        ref.current.material.opacity,\n        0,\n        0.025\n      ))\n  );\n\n  return (\n    <Plane\n      ref={ref}\n      color=\"#0e0e0f\"\n      position={[0, 0, 200]}\n      scale={[100, 100, 1]}\n    />\n  );\n};\n\nexport default Startup;\n","import { ShaderMaterial, BackSide } from 'three';\n\nexport default class BackfaceMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      vertexShader: `varying vec3 worldNormal;\n      void main() {\n        vec4 transformedNormal = vec4(normal, 0.);\n        vec4 transformedPosition = vec4(position, 1.0);\n        #ifdef USE_INSTANCING\n          transformedNormal = instanceMatrix * transformedNormal;\n          transformedPosition = instanceMatrix * transformedPosition;\n        #endif\n        worldNormal = normalize(modelViewMatrix * transformedNormal).xyz;\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\n      }`,\n      fragmentShader: `varying vec3 worldNormal;\n      void main() {\n        gl_FragColor = vec4(worldNormal, 1.0);\n      }`,\n      side: BackSide,\n    });\n  }\n}\n","import { ShaderMaterial } from 'three';\n\nexport default class RefractionMaterial extends ShaderMaterial {\n  constructor(options) {\n    super({\n      vertexShader: `varying vec3 worldNormal;\n      varying vec3 viewDirection;\n      void main() {\n        vec4 transformedNormal = vec4(normal, 0.);\n        vec4 transformedPosition = vec4(position, 1.0);\n        #ifdef USE_INSTANCING\n          transformedNormal = instanceMatrix * transformedNormal;\n          transformedPosition = instanceMatrix * transformedPosition;\n        #endif\n        worldNormal = normalize( modelViewMatrix * transformedNormal).xyz;\n        viewDirection = normalize((modelMatrix * vec4( position, 1.0)).xyz - cameraPosition);;\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\n      }`,\n      fragmentShader: `uniform sampler2D envMap;\n      uniform sampler2D backfaceMap;\n      uniform vec2 resolution;\n      varying vec3 worldNormal;\n      varying vec3 viewDirection;\n      float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\n        return pow(1.05 + dot(viewDirection, worldNormal), 100.0);\n      }\n      void main() {\n        vec2 uv = gl_FragCoord.xy / resolution;\n        vec3 normal = worldNormal * (1.0 - 0.7) - texture2D(backfaceMap, uv).rgb * 0.7;\n        vec4 color = texture2D(envMap, uv += refract(viewDirection, normal, 1.0/1.5).xy);\n        //gl_FragColor = vec4(mix(color.rgb, vec3(0.15), fresnelFunc(viewDirection, normal)), 1.0);\n        gl_FragColor = vec4(mix(color.rgb, vec3(0.4), fresnelFunc(viewDirection, normal)), 1.0);\n      }`,\n      uniforms: {\n        envMap: { value: options.envMap },\n        backfaceMap: { value: options.backfaceMap },\n        resolution: { value: options.resolution },\n      },\n    });\n  }\n}\n","import { WebGLRenderTarget, Object3D } from 'three';\nimport React, { useRef, useMemo } from 'react';\nimport { useLoader, useThree, useFrame } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport lerp from 'lerp';\nimport BackfaceMaterial from './BackfaceMaterial';\nimport RefractionMaterial from './RefractionMaterial';\nimport { useBlock } from './Blocks';\nimport state from './Store';\nimport dim from '../../assets/diamond.glb';\n\nconst dummy = new Object3D();\n\nexport default function Diamond() {\n  const gltf = useLoader(GLTFLoader, dim);\n\n  useMemo(() => gltf.scene.children[0].geometry.center(), []);\n\n  const { size, gl, scene, camera, clock } = useThree();\n  const { contentMaxWidth, sectionHeight, mobile } = useBlock();\n  const model = useRef();\n  const ratio = gl.getPixelRatio();\n\n  const [\n    envFbo,\n    backfaceFbo,\n    backfaceMaterial,\n    refractionMaterial,\n  ] = useMemo(() => {\n    const envFbo = new WebGLRenderTarget(\n      size.width * ratio,\n      size.height * ratio\n    );\n    const backfaceFbo = new WebGLRenderTarget(\n      size.width * ratio,\n      size.height * ratio\n    );\n    const backfaceMaterial = new BackfaceMaterial();\n    const refractionMaterial = new RefractionMaterial({\n      envMap: envFbo.texture,\n      backfaceMap: backfaceFbo.texture,\n      resolution: [size.width * ratio, size.height * ratio],\n    });\n    return [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial];\n  }, [size, ratio]);\n\n  useFrame(() => {\n    state.diamonds.forEach((data, i) => {\n      const t = clock.getElapsedTime() / 2;\n      const { x, offset, scale, factor } = data;\n      const s = (contentMaxWidth / 25) * scale;\n      data.pos.set(\n        mobile ? 0 : x,\n        lerp(\n          data.pos.y,\n          -sectionHeight * offset * factor +\n            (state.top.current / state.zoom) * factor,\n          0.1\n        ),\n        0\n      );\n      dummy.position.copy(data.pos);\n      if (i === state.diamonds.length - 1) dummy.rotation.set(0, t, 0);\n      else dummy.rotation.set(t, t, t);\n      dummy.scale.set(s, s, s);\n      dummy.updateMatrix();\n      model.current.setMatrixAt(i, dummy.matrix);\n      model.current.instanceMatrix.needsUpdate = true;\n    });\n\n    gl.autoClear = false;\n    camera.layers.set(0);\n    gl.setRenderTarget(envFbo);\n    gl.clearColor();\n    gl.render(scene, camera);\n    gl.clearDepth();\n    camera.layers.set(1);\n    model.current.material = backfaceMaterial;\n    gl.setRenderTarget(backfaceFbo);\n    gl.clearDepth();\n    gl.render(scene, camera);\n    camera.layers.set(0);\n    gl.setRenderTarget(null);\n    gl.render(scene, camera);\n    gl.clearDepth();\n    camera.layers.set(1);\n    model.current.material = refractionMaterial;\n    gl.render(scene, camera);\n  }, 1);\n\n  return (\n    <instancedMesh\n      ref={model}\n      layers={1}\n      args={[null, null, state.diamonds.length]}\n      position={[0, 0, 50]}\n    >\n      <bufferGeometry attach=\"geometry\" {...gltf.__$[1].geometry} />\n    </instancedMesh>\n  );\n}\n","import React, { Suspense, useEffect, useRef } from 'react';\nimport { Canvas, Dom } from 'react-three-fiber';\nimport Content from '../components/AboutComponents/Content';\nimport Startup from '../components/AboutComponents/Startup';\nimport state from '../components/AboutComponents/Store';\nimport Diamond from '../components/AboutComponents/Diamond';\n\nconst AboutPage = () => {\n  const scrollArea = useRef();\n  const onScroll = (e) => (state.top.current = e.target.scrollTop);\n  useEffect(() => void onScroll({ target: scrollArea.current }), []);\n\n  return (\n    <>\n      <Canvas\n        concurrent\n        pixelRatio={1}\n        orthographic\n        camera={{ zoom: state.zoom, position: [0, 0, 500] }}\n      >\n        <Suspense\n          fallback={<Dom center className=\"loading\" children=\"Loading...\" />}\n        >\n          <Content />\n          <Diamond />\n          <Startup />\n        </Suspense>\n      </Canvas>\n\n      <div className=\"scrollArea\" ref={scrollArea} onScroll={onScroll}>\n        {new Array(state.sections).fill().map((_, index) => (\n          <div\n            key={index}\n            id={'0' + index}\n            style={{ height: `${(state.pages / state.sections) * 100}vh` }}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default AboutPage;\n","import React from 'react';\nimport { Canvas, Dom } from 'react-three-fiber';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faInstagram,\n  faFacebookSquare,\n  faLinkedin,\n  faGithubSquare,\n} from '@fortawesome/free-brands-svg-icons';\n\nimport { faFile, faBaby } from '@fortawesome/free-solid-svg-icons';\n\nconst MainContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  color: white;\n  margin: 20px;\n`;\n\nconst Anchor = styled.a`\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst Text = styled.div`\n  font-size: 1.4rem;\n`;\n\nconst SocialContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  text-align: left;\n`;\n\nconst ContactPage = () => {\n  return (\n    <MainContainer>\n      <ul\n        style={{\n          textAlign: 'left',\n          display: 'inline-block',\n          listStyleType: 'none',\n        }}\n      >\n        <li>\n          <SocialContainer>\n            <Anchor\n              href=\"https://www.instagram.com/_rafaelhernandez/\"\n              target=\"_blank\"\n            >\n              <Icon icon={faInstagram} size=\"4x\" />\n            </Anchor>\n            <Text>@_rafaelhernandez</Text>\n          </SocialContainer>\n        </li>\n        <li>\n          <SocialContainer>\n            <Anchor\n              href=\"https://www.facebook.com/profile.php?id=100022630700549\"\n              target=\"_blank\"\n            >\n              <Icon icon={faFacebookSquare} size=\"4x\" />\n            </Anchor>\n            <Text>Rafael Hernandez</Text>\n          </SocialContainer>\n        </li>\n        <li>\n          <SocialContainer>\n            <Anchor\n              href=\"https://www.linkedin.com/in/rafael-hernandez/\"\n              target=\"_blank\"\n            >\n              <Icon icon={faLinkedin} size=\"4x\" />\n            </Anchor>\n            <Text>www.linkedin.com/in/rafael-hernandez/</Text>\n          </SocialContainer>\n        </li>\n        <li>\n          <SocialContainer>\n            <Anchor href=\"https://github.com/Rafael805/\" target=\"_blank\">\n              <Icon icon={faGithubSquare} size=\"4x\" />\n            </Anchor>\n            <Text>Rafael805</Text>\n          </SocialContainer>\n        </li>\n        <li>\n          <SocialContainer>\n            <Anchor\n              href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n              target=\"_blank\"\n            >\n              <Icon icon={faBaby} size=\"4x\" />\n            </Anchor>\n            <Text>Baby Photos</Text>\n          </SocialContainer>\n        </li>\n      </ul>\n    </MainContainer>\n  );\n};\n\nexport default ContactPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nconst Nav = styled.nav`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  padding: 0.75rem 2rem;\n  z-index: 1;\n`;\n\nconst NavLinks = styled.ul`\n  list-style-type: none;\n  padding: 2rem 1rem 2rem 2rem;\n\n  & li {\n    transition: all 300ms linear 0s;\n  }\n\n  & a {\n    font-size: 1.6rem;\n    line-height: 2;\n    color: #dfe6e9;\n    text-transform: uppercase;\n    text-decoration: none;\n    cursor: pointer;\n\n    &:hover {\n      color: #fdcb6e;\n      border-bottom: 1px solid #fdcb6e;\n    }\n  }\n`;\n\nconst Li = styled.li`\n  text-decoration: none;\n  color: var(--mainWhite);\n\n  &:focus,\n  &:hover,\n  &:link {\n    text-decoration: none;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nconst Navbar = () => {\n  return (\n    <Nav>\n      <NavLinks>\n        <Li>\n          <StyledLink to=\"/\">Home</StyledLink>\n        </Li>\n        <Li>\n          <StyledLink to=\"/about\">About</StyledLink>\n        </Li>\n        <Li>\n          <StyledLink to=\"/connect\">Connect</StyledLink>\n        </Li>\n      </NavLinks>\n    </Nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ContactPage from './pages/ContactPage';\n\nimport Navbar from './components/Navbar';\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path={['/', '/rafael_hernandez']}>\n            <HomePage />\n          </Route>\n          <Route path=\"/about\">\n            <AboutPage />\n          </Route>\n          <Route path=\"/connect\">\n            <ContactPage />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}